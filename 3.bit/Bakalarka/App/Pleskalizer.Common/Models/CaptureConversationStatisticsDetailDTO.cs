/*
 * REST API Decoder
 *
 * REST API Versions
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class CaptureConversationStatisticsDetailDTO : IEquatable<CaptureConversationStatisticsDetailDTO>
    {
        public CaptureConversationStatisticsDetailDTO(Guid? captureId, string uri)
        {
            CaptureId = captureId;
            Uri = uri;
            FlowStatisticsSnapshots = new List<FlowStatisticsSnapshotDTO>();
        }

        public CaptureConversationStatisticsDetailDTO()
        {
            CaptureId = Guid.NewGuid();
            Uri = String.Empty;
            FlowStatisticsSnapshots = new List<FlowStatisticsSnapshotDTO>();
        }

        /// <summary>
        /// Gets or Sets CaptureId
        /// </summary>
        [Required]

        [DataMember(Name="captureId")]
        public Guid? CaptureId { get; set; }

        /// <summary>
        /// Gets or Sets Uri
        /// </summary>
        [Required]

        [DataMember(Name="uri")]
        public string Uri { get; set; }

        /// <summary>
        /// Gets or Sets FlowStatisticsSnapshots
        /// </summary>
        [Required]

        [DataMember(Name="flowStatisticsSnapshots")]
        public List<FlowStatisticsSnapshotDTO> FlowStatisticsSnapshots { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CaptureConversationStatisticsDetailDTO {\n");
            sb.Append("  CaptureId: ").Append(CaptureId).Append("\n");
            sb.Append("  Uri: ").Append(Uri).Append("\n");
            sb.Append("  FlowStatisticsSnapshots: ").Append(FlowStatisticsSnapshots).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((CaptureConversationStatisticsDetailDTO)obj);
        }

        /// <summary>
        /// Returns true if CaptureConversationStatisticsDetailDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of CaptureConversationStatisticsDetailDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CaptureConversationStatisticsDetailDTO other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    CaptureId == other.CaptureId ||
                    CaptureId != null &&
                    CaptureId.Equals(other.CaptureId)
                ) && 
                (
                    Uri == other.Uri ||
                    Uri != null &&
                    Uri.Equals(other.Uri)
                ) && 
                (
                    FlowStatisticsSnapshots == other.FlowStatisticsSnapshots ||
                    FlowStatisticsSnapshots != null &&
                    FlowStatisticsSnapshots.SequenceEqual(other.FlowStatisticsSnapshots)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (CaptureId != null)
                    hashCode = hashCode * 59 + CaptureId.GetHashCode();
                    if (Uri != null)
                    hashCode = hashCode * 59 + Uri.GetHashCode();
                    if (FlowStatisticsSnapshots != null)
                    hashCode = hashCode * 59 + FlowStatisticsSnapshots.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(CaptureConversationStatisticsDetailDTO left, CaptureConversationStatisticsDetailDTO right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(CaptureConversationStatisticsDetailDTO left, CaptureConversationStatisticsDetailDTO right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}

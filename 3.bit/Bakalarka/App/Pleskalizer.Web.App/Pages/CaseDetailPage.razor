@page "/Case/{CaseId:guid}"
@using Microsoft.AspNetCore.Components
@using Pleskalizer.Web.BL.Facades
@using IO.Swagger.Models

<PageTitle>Cases</PageTitle>


@if (CaseDetail == null || CaseDetail.Captures == null)
{
    <MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" Indeterminate="true"/>
}
else
{
    <MudText Typo="Typo.h3" GutterBottom="true">Case name: @CaseDetail.Name</MudText>
    <MudText Typo="Typo.body2">Description: @CaseDetail.Description</MudText>
    
    <MudGrid Class="align-center my-5">
        <MudItem xs="12" sm="12" md="12" lg="3" xl="3">
            <MudText Typo="Typo.h5" GutterBottom="true">Captures: @CaseDetail.Captures.Count.ToString()</MudText>
        </MudItem>
    </MudGrid>
    @foreach (var captures in CaseDetail.Captures)
    {
        <MudLink Href=@($"case/{@CaseDetail.Id}/capture/{@captures.CaptureId}")>
            <MudPaper Class="pa-4 ma-2 cursor-pointer" Elevation="3">
                <MudText Typo="Typo.subtitle2">@captures.Uri</MudText>
            </MudPaper>
        </MudLink>
    }
}

@code{

    [Parameter] public Guid CaseId { get; set; }

    [Inject] private CaseFacade CaseFacade { get; set; } = null!;
    [Inject] private ContentFacade ContentFacade { get; set; } = null!;
    [Inject] private NavigationManager NavigationManager { get; set; } = null!;

    private CaseDetailDTO CaseDetail { get; set; } = new();
    public ContentSummaryDTO ContentSummary { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        CaseDetail = await CaseFacade.GetById(CaseId);
        ContentSummary = await ContentFacade.GetById(CaseId);
    }

}